------------------------------------------------------------------------------------------------------------------
task1：使用相同的 MD5 Hash 生成两个不同的文件
  
       目标：
           必须完成以下目标才可以完成此任务：
             1. 创建一个名为 prefix 的文件（可以是任意内容），利用 md5collgen 
                生成两个分别名为 out1.bin和 out2.bin的文件。
             2. 利用 sha256sum，md5sum和 xxd命令对生成的文件进行检验。
             3. 若任务完成，必须运行 finish 命令进行任务完成的检验，否则无法完成。
	  
       hint：
           1. md5collgen (MD5 Collision Generation): 
             指定一个前缀(prefix) 文件，若指定的前缀不够 64 bytes，则 md5collgen 会将其填充到 64 bytes，
             然后 md5 collgen 会去寻找大小为 128 bytes 且 hash 相同的 P 和 Q 文件。
           2. echo 命令可以很方便的创建文件。
------------------------------------------------------------------------------------------------------------------
task2：增加生成文件的长度
       
       目标：
           必须完成以下目标才可以完成此任务：
             1. 创建一个名为 prefix 的文件（可以是任意内容），利用 md5collgen 生成两个分别名为 
                out1.bin 和 out2.bin 的文件（可以利用 任务1 中生成的文件）。
             2. 创建一个名为 suffix 的文件（可以是任意内容），将此文件中的内容添加到 out1.bin 文件之后，
                从而生成 out1_long.bin 文件，对 out2.bin 文件进行相同操作生成 out2_long.bin 文件。
             3. 利用 sha256sum 和 md5sum 命令对生成的文件进行检验。
             4. 若任务完成，必须运行 finish 命令进行任务完成的检验，否则无法完成。

       hint：
           echo 命令和 cat 命令可以很方便的完成 目标2
------------------------------------------------------------------------------------------------------------------
task3：使用相同的 MD5 Hash 生成两个可执行文件
       
       目标：
           必须完成以下目标才可以完成此任务：
             1. 编译实验提供的代码文件 task3.c。
             2. task3.c有一个字符数组，找到编译生成的文件中数组的位置，从而完善 task3.sh中的代码。
             4. 运行 task3.sh，生成 a1.out 和 a2.out 文件
             5. 利用 sha256sum 和 md5sum 命令对生成的文件进行检验。
             6. 运行 a1.out 和 a2.out 文件
             7. 若任务完成，必须运行 finish 命令进行任务完成的检验，否则无法完成。

       hint：
           1. 因为实验提供有 Makefile，所以可以直接运行 make 来进行程序的编译
           2. 可以利用 hex 命令以 16 进制的形式查看编译后的文件，从而找到文件中数组的位置
           3. vi fileName 命令可以查看并编辑文件
           4. ./fileName 命令可以运行脚本或文件
------------------------------------------------------------------------------------------------------------------
task4：产生两个行为不同的程序
       
       目标：
           必须完成以下目标才可以完成此任务：
             1. 编译实验提供的代码文件 task4.c。
             2. 完善 task4-1.sh中的代码，并运行
             3. 完善 task4-2.sh中的代码，并运行
             4. 运行 a1.out 和 a2.out 文件
             5. 利用 md5sum 命令对生成的文件进行检验。
             6. 若任务完成，必须运行 finish 命令进行任务完成的检验，否则无法完成。
------------------------------------------------------------------------------------------------------------------
可运行的命令：
    ls
    cat
    echo
    make
    make clean
    md5collgen
    sha256sum
    md5sum
    xxd
    vi fileName: 查看编辑文件
    ./fileName: 运行脚本
    hex fileName: 以 16进制的形式查看文件
    exit: 退出当前任务
    finish: 表明已完成此任务，然后会检测此任务是否完成
------------------------------------------------------------------------------------------------------------------    

